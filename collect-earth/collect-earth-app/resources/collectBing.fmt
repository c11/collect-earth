<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
   <head>
      <title>Bing Maps -- Collect Earth</title>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	  
      <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
	  <script type="text/javascript"  src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
      <script type="text/javascript">

      var map = null;

	  var bingKey = "${bingMapsKey}";
	  
      function GetMap()
      {  

        map = new Microsoft.Maps.Map(document.getElementById("mapDiv"), { mapTypeId: Microsoft.Maps.MapTypeId.aerial, credentials: bingKey, center: new 
		Microsoft.Maps.Location(${placemark.coord.latitude}, ${placemark.coord.longitude}), zoom: 19 });
        Microsoft.Maps.loadModule('Microsoft.Maps.AdvancedShapes', { callback: shapesModuleLoaded });
		 
		 

      }


      function shapesModuleLoaded()
      {
        //Create mock data   		
        var rings = [
            [
            
            <#list placemark.shape as coord>
			new Microsoft.Maps.Location(${coord.latitude}, ${coord.longitude}),
			</#list>  
			],
           <#list placemark.points as square>
 				[ 
			     <#list square.shape as squareCorners>
			           new Microsoft.Maps.Location(${squareCorners.latitude},${squareCorners.longitude}),
			     </#list>
		     	],
		    </#list>
        ];

        //Create a complex polygon
        var polygon = new Microsoft.Maps.Polygon(rings, {
            fillColor: new Microsoft.Maps.Color(0, 0, 0, 0),
            strokeColor: new Microsoft.Maps.Color(200, 255, 255, 255)
        });
		
		 //Add the polyon to the map.
        map.entities.push(polygon);
		
		showImageryDates();
      }
	  
	function GetMetadata( data)
	{
	
		var startDate = data.resourceSets[0].resources[0].vintageStart;
		var endDate =  data.resourceSets[0].resources[0].vintageEnd;
		
		// Retrieve the location of the map center 
        var center = map.getCenter();
         
		var south = map.getBounds().getSouth(); 
		var west = map.getBounds().getWest();
		
		var corner = new Microsoft.Maps.Location(south,west);
		
		var description = "";
		
		if( startDate != null ){
			description += "First Image " +  startDate + "<br/>";
		}
		
		if( endDate != null ){
			description += "Last Image " +  endDate;
		}
		
		if( startDate ==null && endDate == null ){
			description = "Unknown imagery dates";
		}
		
		
		// Create an info box 
		var infoboxOptions = {width:300, 
							  height: 100, 
							  title: "Imagery acquisition dates", 
							  description: description, 
							  showPointer: false, 
							  
							  offset: new Microsoft.Maps.Point(-100,0)};
		var myInfobox = new Microsoft.Maps.Infobox(corner, infoboxOptions);
		
		// Add the info box to the map
        map.entities.push(myInfobox);
	}

    function showImageryDates()
	{
		var url = 'http://dev.virtualearth.net/REST/V1/Imagery/Metadata/Aerial/${placemark.coord.latitude},${placemark.coord.longitude}?zl=15&key='+bingKey+"&jsonp=GetMetadata&jsonso=abc3144sd";

		$.ajax({
                  url: url,
                  dataType: "jsonp",
                  
                  jsonp: "false"
              });
 
	}
      
      </script>
   </head>
   <body onload="GetMap();">
      <div id='mapDiv' style="width:100%;height:100%"></div> 
   </body>
</html>